@{
    Layout = null;
}

@{ var patterns = new Dictionary<string, int[]> {
        ["red"] = new int[] { 0, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 62, 63, 64, 65, 66, 73},
        ["green"] = new int[] { 0, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 8, 9, 10, 11, 12, 73},
        ["blue"] = new int[] { 0, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 44, 45, 46, 47, 48, 73},
        ["yellow"] = new int[] { 0, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 26, 27, 28, 29, 30, 73}
    };}

@model GameViewModel

@{ var diceRoll = Model.CurrentDieRoll;}

@{ var players = Model.Players;}

@{ foreach (var p in Model.Players)
    {
        p.Pattern = patterns[p.PlayerColor];
    }
}

<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Game</title>
    <link href="~/css/LudoStyle.css" rel="stylesheet" />
    <link href="~/css/reset.css" rel="stylesheet" />
    <script type="text/javascript" src="~/js/site.js"></script>
</head>

<body>
    <div class="gameInfo">
        <div class="currentPlayer">@Model.Players[Model.CurrentPlayerID].Name</div>
        <div class="dice" asp-controller="Ludo" asp-action="Stats">
            @* Paints a die with correct number of dots depending on diceRoll. *@
            @switch (diceRoll)
            {
                case 1:
                    <div class="diceDot" id="center"></div>
                    break;
                case 2:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 3:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="center"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 4:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 5:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="center"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 6:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="leftMiddel"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="rightMiddel"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                default:
                    <p>wrong</p>
                    break;
            }
        </div>
    </div>

    <div class="board">
        @* Paints the leftWing with pieces, if their positions is 1-18 *@
        <div class="wing" id="leftWing">
            @for (int i = 1; i <= 18; i++)
            {
                bool painted = false;
                var player = players[1];

                foreach (var piece in player.Pieces)
                {
                    if (player.Pattern[piece.Position] == i)
                    {
                        string brickID = "p" + (player.PlayerId + 1) + "b" + (piece.PieceId + 1);

                        <div class="field" id="@brickID" onclick="movePiece('@brickID', '@piece.Position + diceRoll]')">
                            <div class="brick player@(player.PlayerId + 1)">@i</div>
                        </div>
                        painted = true;
                        break;
                    }
                }

                if (!painted && i == 2 || i >= 8 && i <= 12)
                {
                    <div class="field player@(player.PlayerId + 1)" id="@i">@i</div>
                }
                else if (!painted)
                {
                    <div class="field" id="@i">@i</div>
                }
            }
        </div>

        @* Paints the rightWing with pieces, if their positions is 37-54 *@
        <div class="wing" id="rightWing">
            @for (int i = 37; i <= 54; i++)
            {
                bool painted = false;
                var player = players[2];

                foreach (var piece in player.Pieces)
                {
                    if (player.Pattern[piece.Position] == i)
                    {
                        string brickID = "p" + (player.PlayerId + 1) + "b" + (piece.PieceId + 1);

                        <div class="field" id="@brickID" onclick="movePiece('@brickID', '@piece.Position + diceRoll]')">
                            <div class="brick player@(player.PlayerId + 1)">@i</div>
                        </div>
                        painted = true;
                        break;
                    }
                }

                if (!painted && i == 38 || i >= 44 && i <= 48)
                {
                    <div class="field player@(player.PlayerId + 1)" id="@i">@i</div>
                }
                else if (!painted)
                {
                    <div class="field" id="@i">@i</div>
                }
            }
        </div>

        @* Paints the topWing with pieces, if their positions is 19-36 *@
        <div class="wing" id="topWing">
            @for (int i = 19; i <= 36; i++)
            {
                bool painted = false;
                var player = players[3];

                foreach (var piece in player.Pieces)
                {
                    if (player.Pattern[piece.Position] == i)
                    {
                        string brickID = "p" + (player.PlayerId + 1) + "b" + (piece.PieceId + 1);

                        <div class="field" id="@brickID" onclick="movePiece('@brickID', '@piece.Position + diceRoll]')">
                            <div class="brick player@(player.PlayerId + 1)">@i</div>
                        </div>
                        painted = true;
                        break;
                    }
                }

                if (!painted && i == 20 || i >= 26 && i <= 30)
                {
                    <div class="field player@(player.PlayerId + 1)" id="@i">@i</div>
                }
                else if (!painted)
                {
                    <div class="field" id="@i">@i</div>
                }
            }
        </div>

        @* Paints the bottomWing with pieces, if their positions is 55-72 *@
        <div class="wing" id="bottomWing">
            @for (int i = 55; i <= 72; i++)
            {
                bool painted = false;
                var player = players[0];

                foreach (var piece in player.Pieces)
                {
                    if (player.Pattern[piece.Position] == i)
                    {
                        string brickID = "p" + (player.PlayerId + 1) + "b" + (piece.PieceId + 1);

                        <div class="field" id="@brickID" onclick="movePiece('@brickID', '@piece.Position + diceRoll]')">
                            <div class="brick player@(player.PlayerId + 1)">@i</div>
                        </div>
                        painted = true;
                        break;
                    }
                }

                if (!painted && i == 56 || i >= 62 && i <= 66)
                {
                    <div class="field player@(player.PlayerId + 1)" id="@i">@i</div>
                }
                else if (!painted)
                {
                    <div class="field" id="@i">@i</div>
                }
            }
        </div>


        @* Paints the bases with pieces, if theyre position is 0 *@
        @foreach (var player in players)
        {
            <div class="start player@(player.PlayerId + 1)" id="base@(player.PlayerId + 1)">

                @foreach (var piece in player.Pieces)
                {
                    if (piece.Position == 0)
                    {
                        <div class="field" id="p1b@(piece.PieceId + 1)">
                            <div class="brick player@(player.PlayerId + 1)">0</div>
                        </div>
                    }
                }
            </div>
        }
    </div>
</body>

</html>