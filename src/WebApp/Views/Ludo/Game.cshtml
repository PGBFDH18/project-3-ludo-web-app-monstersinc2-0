@{
    Layout = null;
}

@{ var patterns = new Dictionary<string, int[]>
    {
        ["0"] = new int[] { 0, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 62, 63, 64, 65, 66, 73},
        ["1"] = new int[] { 0, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 8, 9, 10, 11, 12, 73},
        ["2"] = new int[] { 0, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 44, 45, 46, 47, 48, 73},
        ["3"] = new int[] { 0, 19, 20, 21, 22,
23, 24, 72, 71, 70, 69, 68, 67, 61, 55, 56, 57, 58, 59, 60, 18, 17, 16,
15, 14, 13, 7, 1, 2, 3, 4, 5, 6, 54, 53, 52, 51, 50, 49, 43, 37,
38, 39, 40, 41, 42, 36, 35, 34, 33, 32, 31, 25, 26, 27, 28, 29, 30, 73}
    };}

@model GameViewModel

@{ var diceRoll = Model.CurrentDieRoll;}

@{ var currentPlayerId = Model.CurrentPlayerID;}

@{ var players = Model.Players;}

@{ foreach (var player in players)
    {
        player.Pattern = patterns[player.PlayerColor];
    }
}

<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Game</title>
    <link href="~/css/LudoStyle.css" rel="stylesheet" />
    <link href="~/css/reset.css" rel="stylesheet" />
    <script type="text/javascript" src="~/js/site.js"></script>
</head>

<body>
    <div class="gameInfo">
        <div class="currentPlayer">@players[currentPlayerId].Name</div>
        <div class="dice" asp-controller="Ludo" asp-action="Stats">
            @* Paints a die with correct number of dots depending on diceRoll. *@
            @switch (diceRoll)
            {
                case 1:
                    <div class="diceDot" id="center"></div>
                    break;
                case 2:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 3:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="center"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 4:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 5:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="center"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                case 6:
                    <div class="diceDot" id="leftUpper"></div>
                    <div class="diceDot" id="leftMiddel"></div>
                    <div class="diceDot" id="leftLower"></div>
                    <div class="diceDot" id="rightUpper"></div>
                    <div class="diceDot" id="rightMiddel"></div>
                    <div class="diceDot" id="rightLower"></div>
                    break;
                default:
                    <p>wrong</p>
                    break;
            }
        </div>
    </div>

    <div class="board">
        @*Paints all four wings and pieces, if their positions says so.*@
        @for (int i = 0; i < 4; i++)
        {
            string wingID = null;
            int startPos = 0;
            int endPos = 0;
            int[] playerBricks = null;

            if (i == 0)
            {
                wingID = "bottomWing";
                startPos = 55;
                endPos = 72;
                playerBricks = new int[] { 56, 62, 66 };
            }

            if (i == 1)
            {
                wingID = "leftWing";
                startPos = 1;
                endPos = 18;
                playerBricks = new int[] { 2, 8, 12 };
            }

            if (i == 2)
            {
                wingID = "topWing";
                startPos = 19;
                endPos = 36;
                playerBricks = new int[] { 20, 26, 30 };
            }

            if (i == 3)
            {
                wingID = "rightWing";
                startPos = 37;
                endPos = 54;
                playerBricks = new int[] { 38, 44, 48 };
            }

            <div class="wing" id="@wingID">
                @for (int j = startPos; j <= endPos; j++)
                {
                    bool painted = false;
                    foreach (var player in players)
                    {
                        foreach (var piece in player.Pieces)
                        {
                            if (player.Pattern[piece.Position] == j)
                            {
                                string brickID = "p" + player.PlayerId + "b" + piece.PieceId;
                                <div class="field" id="@brickID">
                                    <div class="brick player@(player.PlayerId + 1)">@i</div>
                                </div>
                                painted = true;
                                break;
                            }
                        }
                        if (!painted && i == playerBricks[0] || i >= playerBricks[1] && i <= playerBricks[2])
                        {
                            <div class="field player@(player.PlayerId + 1)" id="@i">@i</div>
                            break;
                        }
                        else if (!painted)
                        {
                            <div class="field" id="@i">@i</div>
                            break;
                        }
                    }
                }
            </div>

            // Paints the bases with pieces, if they have position 0.
            <div class="start player@(i + 1)" id="base@(i + 1)">
                @if (players[i] != null)
                {
                    @foreach (var piece in players[i].Pieces)
                    {
                        if (piece.Position == 0)
                        {
                            string brickID = "p" + i + "b" + piece.PieceId;
                            <div class="field" id="@brickID">
                                <div class="brick player@(i)"></div>
                            </div>
                        }
                    }
                }
                else
                {
                    for (int j = 0; j < 4; j++)
                    {
                        string brickID = "p" + i + "b" + j;
                        <div class="field" id="@brickID">
                            <div class="brick player@(i)"></div>
                        </div>
                    }
                }
            </div>
        }
    </div>
</body>

</html>