@model GameViewModel

@{
    ViewData["Title"] = "Ludo - Game ID: " + Model.GameID;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Ludo Game ID: @Model.GameID</h1>

<div class="row">
    @{string[] colors = new string[] { "danger", "success", "info", "warning" }; }
    @{ foreach (var player in Model.Players)
        {
            <div class="col-lg-4">
                <div class="card border-@colors[int.Parse(player.PlayerColor)] mb-3" style="max-width: 20rem;">
                    <div class="card-header card-title"><h3>@player.Name</h3></div>
                    <div class="card-body">
                        <div class="card-body card-columns" style="column-count: 2">
                            @{ foreach (var piece in player.Pieces)
                                {
                                    if (Model.TimeToMove && player.PlayerId == Model.CurrentPlayerID && piece.Position <= 55)
                                    {
                                        <a asp-controller="Ludo" asp-action="MovePiece" asp-route-pieceID="@(piece.PieceId)"
                                           asp-route-gameID="@(Model.GameID)" asp-route-roll="@(Model.CurrentDieRoll)" asp-route-currentPlayer="@(Model.CurrentPlayerID)">
                                            <div class="card bg-@colors[int.Parse(player.PlayerColor)] mb-3" style="max-width: 50rem; color: white">
                                                <p class="mb-0 h5">@(piece.PieceId + 1)</p>
                                                <p class="mb-0">Position: @piece.Position</p>
                                                @if (piece.Position > 55)
                                                {<p class="mb-0">Goal</p>}
                                                else if (piece.Position > 50)
                                                {<p class="mb-0">GoalPath</p>}
                                                else if (piece.Position > 0)
                                                {<p class="mb-0">InGame</p>}
                                                else
                                                {<p class="mb-0">HomeArea</p> }
                                            </div>
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="card bg-@colors[int.Parse(player.PlayerColor)] mb-3" style="max-width: 50rem">
                                            <p class="mb-0 h5">@(piece.PieceId + 1)</p>
                                            <p class="mb-0">Position: @piece.Position</p>
                                            @if (piece.Position > 55)
                                            {<p class="mb-0">Goal</p>}
                                            else if (piece.Position > 50)
                                            {<p class="mb-0">GoalPath</p>}
                                            else if (piece.Position > 0)
                                            {<p class="mb-0">InGame</p>}
                                            else
                                            {<p class="mb-0">HomeArea</p>}
                                        </div>
                                    }
                                }}
                        </div>

                    </div>
                    <div class="card-footer">
                        @foreach (var piece in player.Pieces)
                        {
                            int percent = (int)Math.Round(piece.Position / 0.56, 0);
                            <div class="progress">
                                <div class="progress-bar bg-@colors[int.Parse(player.PlayerColor)]" role="progressbar" style="width: @percent%" aria-valuenow="@(piece.Position)" aria-valuemin="0" aria-valuemax="56">@(piece.PieceId + 1) (@(piece.Position) / 56)</div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
    }
</div>


<div class="card border-primary mb-3" style="max-width: 20rem;">
    @if (Model.Winner != null)
    {
        <div class="card-header"><h3>@Model.Winner.Name.ToUpper() WON!</h3></div>
        <div class="card-body">
            <h1 class="card-title">Congrats!</h1>
                <p class="card-text">Please see the <a asp-controller="Ludo" asp-action="Stats">Stats</a> page to view former winners!</p>
        </div>
    }
    else
    {
        <div class="card-header"><h3>@Model.Players[Model.CurrentPlayerID].Name's turn!</h3></div>
        <div class="card-body">
            <h1 class="card-title">Latest roll: @(Model.CurrentDieRoll)</h1>
            @if (Model.TimeToMove)
            {
                <p class="card-text">Click the piece you want to move!</p>
                <p class="card-text">You can only move your own piece.</p>
            }
            else
            {
                <p class="card-text">Click the button to roll the die!</p>
            }
        </div>
    }
</div>

@if (!Model.TimeToMove && Model.Winner == null)
{
    <a asp-controller="Ludo" asp-action="RollDie" asp-route-gameID="@(Model.GameID)">
        <button type="button" class="btn btn-primary">ROLL DIE</button>
    </a>
}
else
{
    <button type="button" class="btn btn-primary disabled">ROLL DIE</button>
}